language: node_js

node_js:
  - node

jobs:
  include:
    - name: "windows - amd64"
      os: windows
      deploy:
        provider: script
        skip_cleanup: true
        script:
          - npm run build-binaries
        on:
          tags: on
    - name: "linux - amd64"
      os: linux
      arch: amd64
      install:
        - sudo apt-get install ninja-build libasound2 libasound2-dev libpulse-dev
    - name: "linux - arm64 (aarch64)"
      os: linux
      arch: arm64
      install:
        - sudo apt-get install ninja-build libasound2 libasound2-dev libpulse-dev
    - name: "linux - arm32 (armv8l)"
      os: linux
      arch: arm64
      env:
        # https://packages.ubuntu.com/xenial/crossbuild-essential-armhf
        - CC=arm-linux-gnueabihf-gcc
        - CXX=arm-linux-gnueabihf-g++
        - SETARCH="setarch linux32 --verbose --32bit"
      before_install:
        - sudo dpkg --add-architecture armhf
        - sudo apt-get update -yq
        - |-
          sudo apt-get -yq install \
            crossbuild-essential-armhf \
            libc6:armhf
      install:
        - sudo apt-get install ninja-build libasound2:armhf libasound2-dev:armhf libpulse-dev:armhf
    - name: "macos - amd64"
      os: osx
      addons:
        homebrew:
          packages:
            - ninja

dist: focal

script:
  - npm ci --ignore-scripts
  - if command -v arm-linux-gnueabihf-gcc; then npm run rebuild -- -a=arm ; else npm run rebuild ; fi

cache:
  directories:
  - "$HOME/.npm"

deploy:
  provider: script
  skip_cleanup: true
  script:
    - if command -v arm-linux-gnueabihf-gcc; then npm run build-binaries-node -- -- --arch arm && npm run build-binaries-electron -- -- --arch arm ; else npm run build-binaries ; fi
  on:
    tags: on
